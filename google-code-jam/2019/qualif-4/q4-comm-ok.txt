#!/usr/bin/env python
# -*- encoding: utf-8 -*-

import sys


def debug(msg):
    """
    Debug avec script interactive_runner.py modifi√©e
    """
    sys.stderr.write(msg + "\n")
    sys.stderr.flush()


def echo(chaine):
    sys.stdout.write(chaine + "\n")
    sys.stdout.flush()
    debug(" <- " + chaine)


def readline():
    rcv = sys.stdin.readline().strip()
    debug(" -> " + rcv)
    return rcv


class Resolveur():
    def __init__(self, N, B, F):
        self.i = 0
        self.N = N
        self.B = B
        self.F = F

    def proposer(self):
        self.i += 1
        if self.i < self.F:
            return self.N * "1"
        else:
            return "1 2 3"

    def recevoir(self):
        pass

def main():
    """
    Resolution interactive
    """
    T = int(sys.stdin.readline())
    for i in xrange(T):
        debug("== Test %d ==" % (i+1))
        N, B, F = [int(x) for x in readline().split(' ')]
        resolveur = Resolveur(N, B, F)
        
        for i in range(F+1):
            proposition = resolveur.proposer()
            echo(proposition)
            
            rcv = readline()
            if rcv == "-1":
                sys.exit(0)
            
            if " " in proposition:
                break

            rcv = resolveur.recevoir()


if __name__ == '__main__':
    main()
